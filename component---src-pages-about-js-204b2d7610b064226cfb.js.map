{"version":3,"file":"component---src-pages-about-js-204b2d7610b064226cfb.js","mappings":"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","sources":["webpack://ebasabe/./node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack://ebasabe/./node_modules/@chakra-ui/layout/dist/esm/simple-grid.js","webpack://ebasabe/./node_modules/@chakra-ui/icons/dist/esm/Check.js","webpack://ebasabe/./src/constants/skills.js","webpack://ebasabe/./src/images/about-me.jpg","webpack://ebasabe/./src/pages/about.js"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  var styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \" + value + \"/span \" + value;\n  });\n}\n\nexport var GridItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var colSpan = props.colSpan,\n      colStart = props.colStart,\n      colEnd = props.colEnd,\n      rowEnd = props.rowEnd,\n      rowSpan = props.rowSpan,\n      rowStart = props.rowStart,\n      rest = _objectWithoutPropertiesLoose(props, [\"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"]);\n\n  var styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/simplegrid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var columns = props.columns,\n      spacingX = props.spacingX,\n      spacingY = props.spacingY,\n      spacing = props.spacing,\n      minChildWidth = props.minChildWidth,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, function (value) {\n    return isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\";\n  });\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, function (value) {\n    return isNull(value) ? null : \"repeat(\" + value + \", minmax(0, 1fr))\";\n  });\n}","import { createIcon } from \"@chakra-ui/icon\";\nimport * as React from \"react\";\nexport var CheckIcon = createIcon({\n  viewBox: \"0 0 14 14\",\n  path: /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\"\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n  }))\n});","const SKILLS = {\n  Languages: ['HTML & CSS', 'Javascript', 'Typescript'],\n  Frontend: ['Vue','React','Angular', 'Gatsby', 'Next.js'],\n  Backend: ['Node.js'],\n  Testing: ['Cypress', 'Jest'],\n  Others: ['Figma', 'Sketch'],\n};\n\nexport default SKILLS;","export default __webpack_public_path__ + \"static/about-me-a960836b1b7217e1089643fdf97dce24.jpg\";","import { Container, Heading, Flex, Box } from \"@chakra-ui/layout\";\nimport {\n  Text,\n  Link,\n  HStack,\n  VStack,\n  Icon,\n  SimpleGrid,\n  Image,\n} from \"@chakra-ui/react\";\nimport { CheckIcon } from \"@chakra-ui/icons\";\nimport React, { Fragment } from \"react\";\nimport Layout from \"../components/Layout/Layout\";\nimport SKILLS from \"../constants/skills\";\nimport AboutImage from \"../images/about-me.jpg\";\n\nconst About = () => {\n  const categories = Object.keys(SKILLS);\n\n  return (\n    <Layout>\n      <Container maxW=\"container.xl\" pt=\"4\">\n        <Flex\n          padding={{ base: 4, md: 10 }}\n          justify=\"space-between\"\n          alignItems=\"flex-start\"\n          direction={{ base: \"column-reverse\", md: \"row\" }}\n        >\n          <Box maxW=\"2xl\">\n            <Heading as=\"h3\" mb=\"2\">\n              Hi!{\" \"}\n              <span role=\"img\" aria-label=\"Hand shake\">\n                👋\n              </span>{\" \"}\n              I'm David Basabe\n            </Heading>\n            <Heading as=\"h4\" mb=\"6\" size=\"md\">\n              A self taught{\" \"}\n              <Link\n                color=\"blue.400\"\n                href=\"https://en.wikipedia.org/wiki/Front-end_web_development\"\n                isExternal\n              >\n                Front End Developer\n              </Link>{\" \"}\n              from Venezuela 🇻🇪\n            </Heading>\n            <Text color=\"gray.600\">\n              Web Developer with experience in application development and\n              websites, working with agile methodologies, applying extensive\n              knowledge in HTML, CSS, JavaScript, Vue, React, Angular and Node.\n              MEVN Stack. <br /> <br />\n            </Text>\n            <Text color=\"gray.600\" mb=\"8\">\n              Notions of UI and UX design. Using design and prototype tools such\n              as Sketch, Figma, Invision. With the ability to implement\n              solutions thinking about the maintainability and extensibility of\n              the code, team work, ethical and professional.\n            </Text>\n            <Box backgroundColor=\"whiteAlpha.700\" py=\"8\" px=\"6\" rounded=\"xl\">\n              <Heading as=\"h3\" size=\"lg\">\n                Skills\n              </Heading>\n              <Text mb=\"4\" color=\"gray.600\">\n                These are the things I know about or use on a daily basis.\n              </Text>\n              <SimpleGrid columns={{ base: 1, md: 2, lg: 5 }} spacing={6}>\n                {categories.map((category) => (\n                  <Fragment key={category}>\n                    <VStack align={\"start\"}>\n                      <Heading as=\"h4\" size=\"sm\">\n                        {category}\n                      </Heading>\n                      {SKILLS[category].map((skill, idx) => (\n                        <HStack key={idx}>\n                          <Box color={\"green.400\"} px={1}>\n                            <Icon as={CheckIcon} />\n                          </Box>\n                          <Text fontWeight={600} fontSize=\"sm\">\n                            {skill}\n                          </Text>\n                        </HStack>\n                      ))}\n                    </VStack>\n                  </Fragment>\n                ))}\n              </SimpleGrid>\n            </Box>\n          </Box>\n          <Box\n            display={{ base: \"none\", lg: \"block\" }}\n            boxSize={{ base: \"100%\" }}\n          >\n            <Image\n              src={AboutImage}\n              alt=\"About me\"\n              rounded=\"md\"\n              boxShadow=\"lg\"\n            />\n          </Box>\n        </Flex>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default About;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","Grid","props","ref","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","__css","displayName","SimpleGrid","count","width","columns","spacingX","spacingY","spacing","minChildWidth","value","n","CheckIcon","viewBox","path","fill","points","Languages","Frontend","Backend","Testing","Others","categories","SKILLS","Layout","maxW","pt","padding","base","md","justify","alignItems","direction","as","mb","role","size","color","href","isExternal","backgroundColor","py","px","rounded","lg","map","category","Fragment","align","skill","idx","fontWeight","fontSize","boxSize","src","AboutImage","alt","boxShadow"],"sourceRoot":""}