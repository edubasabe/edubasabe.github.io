{"version":3,"file":"component---src-pages-works-js-8ed893618bd579a336fb.js","mappings":"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","sources":["webpack://ebasabe/./node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack://ebasabe/./node_modules/@chakra-ui/layout/dist/esm/simple-grid.js","webpack://ebasabe/./src/components/UI/PageHeading/PageHeading.js","webpack://ebasabe/./node_modules/@chakra-ui/layout/dist/esm/center.js","webpack://ebasabe/./src/components/UI/Card.js","webpack://ebasabe/./src/pages/works.js"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  var styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \" + value + \"/span \" + value;\n  });\n}\n\nexport var GridItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var colSpan = props.colSpan,\n      colStart = props.colStart,\n      colEnd = props.colEnd,\n      rowEnd = props.rowEnd,\n      rowSpan = props.rowSpan,\n      rowStart = props.rowStart,\n      rest = _objectWithoutPropertiesLoose(props, [\"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"]);\n\n  var styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/simplegrid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var columns = props.columns,\n      spacingX = props.spacingX,\n      spacingY = props.spacingY,\n      spacing = props.spacing,\n      minChildWidth = props.minChildWidth,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, function (value) {\n    return isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\";\n  });\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, function (value) {\n    return isNull(value) ? null : \"repeat(\" + value + \", minmax(0, 1fr))\";\n  });\n}","import React from 'react';\nimport { Box } from \"@chakra-ui/layout\";\n\nexport default function PageHeading(props) {\n  return (\n    <Box my=\"4\" mb=\"6\">\n      {props.children}\n    </Box>\n  );\n}\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\n\nexport var Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nif (__DEV__) {\n  Center.displayName = \"Center\";\n}\n\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\n\nexport var AbsoluteCenter = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$axis = props.axis,\n      axis = _props$axis === void 0 ? \"both\" : _props$axis,\n      rest = _objectWithoutPropertiesLoose(props, [\"axis\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: centerStyles[axis]\n  }, rest, {\n    position: \"absolute\"\n  }));\n});","import React from \"react\";\nimport {\n  Heading,\n  Box,\n  Center,\n  Image,\n  Text,\n  Stack,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { css } from \"@emotion/react\";\nimport { theme } from \"@chakra-ui/react\";\n\nexport default function Card({ title, link, image, height }) {\n  const { colors } = theme;\n  const cardStyles = css`\n    background-color: ${colors.black};\n    transition: all 400ms ease;\n\n    .card__text-container {\n      opacity: 0;\n    }\n\n    .card__image,\n    .card__text-container {\n      transition: all 400ms ease;\n    }\n\n    &:hover {\n      cursor: pointer;\n      .card__image {\n        opacity: 0.3;\n      }\n      .card__text-container {\n        opacity: 1;\n      }\n    }\n  `;\n  return (\n    <Center py={6}>\n      <Box\n        maxW={\"270px\"}\n        w={\"full\"}\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        boxShadow={\"2xl\"}\n        rounded={\"md\"}\n        overflow={\"hidden\"}\n        position=\"relative\"\n        css={cardStyles}\n      >\n        <Image\n          h={height}\n          w={\"full\"}\n          src={image}\n          objectFit={\"cover\"}\n          className=\"card__image\"\n        />\n\n        <Box\n          p={2}\n          position=\"absolute\"\n          bottom=\"0\"\n          w=\"full\"\n          className=\"card__text-container\"\n        >\n          <Stack spacing={0} align={\"left\"} mb={2}>\n            <Heading\n              fontSize={\"lg\"}\n              fontWeight=\"bold\"\n              color=\"white\"\n              fontFamily={\"body\"}\n              textAlign=\"left\"\n            >\n              {title}\n            </Heading>\n            <Text color={\"whiteAlpha.800\"}>{link}</Text>\n          </Stack>\n        </Box>\n      </Box>\n    </Center>\n  );\n}\n","import { Container, Heading } from \"@chakra-ui/layout\";\nimport React, { Fragment } from \"react\";\nimport Layout from \"../components/Layout/Layout\";\nimport PageHeading from \"../components/UI/PageHeading/PageHeading\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Card from \"../components/UI/Card\";\nimport { SimpleGrid } from \"@chakra-ui/react\";\n\nconst Works = () => {\n  const {\n    allContentfulWebsites: { edges: works },\n  } = useStaticQuery(graphql`\n    query MyQuery {\n      allContentfulWebsites {\n        edges {\n          node {\n            id\n            name\n            url\n            cover {\n              file {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout>\n      <Container maxW=\"container.xl\" pt=\"4\">\n        <PageHeading>\n          <Heading>Works</Heading>\n        </PageHeading>\n        <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }}>\n          {works.map((work) => (\n            <Fragment key={work.node.id}>\n              <Card\n                title={work.node.name}\n                link={work.node.url}\n                image={work.node.cover?.file.url}\n                height={\"220px\"}\n              />\n            </Fragment>\n          ))}\n        </SimpleGrid>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Works;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","Grid","props","ref","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","__css","displayName","SimpleGrid","count","width","columns","spacingX","spacingY","spacing","minChildWidth","value","n","PageHeading","my","mb","children","Center","baseStyle","alignItems","justifyContent","Card","title","link","image","height","colors","theme","cardStyles","css","black","py","maxW","w","bg","useColorModeValue","boxShadow","rounded","overflow","position","h","src","objectFit","className","p","bottom","align","fontSize","fontWeight","color","fontFamily","textAlign","works","useStaticQuery","allContentfulWebsites","edges","Layout","pt","base","md","lg","map","work","Fragment","node","id","name","url","cover","file"],"sourceRoot":""}